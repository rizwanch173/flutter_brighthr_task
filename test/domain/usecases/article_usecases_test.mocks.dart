// Mocks generated by Mockito 5.4.5 from annotations
// in flutter_brighthr_task/test/domain/usecases/article_usecases_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:flutter_brighthr_task/domain/entity/article_entity.dart' as _i6;
import 'package:flutter_brighthr_task/domain/entity/comment_entity.dart' as _i7;
import 'package:flutter_brighthr_task/domain/entity/common/network_error.dart'
    as _i5;
import 'package:flutter_brighthr_task/domain/repository/article_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ArticleRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticleRepository extends _i1.Mock implements _i3.ArticleRepository {
  MockArticleRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.NetworkError, List<_i6.ArticleEntity>>>
  fetchArticles() =>
      (super.noSuchMethod(
            Invocation.method(#fetchArticles, []),
            returnValue: _i4.Future<
              _i2.Either<_i5.NetworkError, List<_i6.ArticleEntity>>
            >.value(
              _FakeEither_0<_i5.NetworkError, List<_i6.ArticleEntity>>(
                this,
                Invocation.method(#fetchArticles, []),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.NetworkError, List<_i6.ArticleEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.NetworkError, List<_i7.CommentEntity>>>
  fetchComments(int? postId) =>
      (super.noSuchMethod(
            Invocation.method(#fetchComments, [postId]),
            returnValue: _i4.Future<
              _i2.Either<_i5.NetworkError, List<_i7.CommentEntity>>
            >.value(
              _FakeEither_0<_i5.NetworkError, List<_i7.CommentEntity>>(
                this,
                Invocation.method(#fetchComments, [postId]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.NetworkError, List<_i7.CommentEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.NetworkError, bool>> saveArticleOffline(
    _i6.ArticleEntity? article,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveArticleOffline, [article]),
            returnValue: _i4.Future<_i2.Either<_i5.NetworkError, bool>>.value(
              _FakeEither_0<_i5.NetworkError, bool>(
                this,
                Invocation.method(#saveArticleOffline, [article]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.NetworkError, bool>>);

  @override
  _i4.Future<_i2.Either<_i5.NetworkError, bool>> removeArticleOffline(
    int? articleId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#removeArticleOffline, [articleId]),
            returnValue: _i4.Future<_i2.Either<_i5.NetworkError, bool>>.value(
              _FakeEither_0<_i5.NetworkError, bool>(
                this,
                Invocation.method(#removeArticleOffline, [articleId]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.NetworkError, bool>>);

  @override
  _i4.Future<_i2.Either<_i5.NetworkError, List<_i6.ArticleEntity>>>
  getOfflineArticles() =>
      (super.noSuchMethod(
            Invocation.method(#getOfflineArticles, []),
            returnValue: _i4.Future<
              _i2.Either<_i5.NetworkError, List<_i6.ArticleEntity>>
            >.value(
              _FakeEither_0<_i5.NetworkError, List<_i6.ArticleEntity>>(
                this,
                Invocation.method(#getOfflineArticles, []),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.NetworkError, List<_i6.ArticleEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.NetworkError, bool>> isArticleSaved(
    int? articleId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#isArticleSaved, [articleId]),
            returnValue: _i4.Future<_i2.Either<_i5.NetworkError, bool>>.value(
              _FakeEither_0<_i5.NetworkError, bool>(
                this,
                Invocation.method(#isArticleSaved, [articleId]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.NetworkError, bool>>);

  @override
  _i4.Future<_i2.Either<_i5.NetworkError, _i6.ArticleEntity>> fetchArticle(
    int? postId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#fetchArticle, [postId]),
            returnValue: _i4.Future<
              _i2.Either<_i5.NetworkError, _i6.ArticleEntity>
            >.value(
              _FakeEither_0<_i5.NetworkError, _i6.ArticleEntity>(
                this,
                Invocation.method(#fetchArticle, [postId]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.NetworkError, _i6.ArticleEntity>>);
}
